{"ast":null,"code":"var _jsxFileName = \"C:\\\\planner-app\\\\src\\\\widgets\\\\ReminderListWidget.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ReminderListWidget() {\n  _s();\n  const [reminderListData, setReminderListData] = useState();\n  useEffect(() => {\n    let reminderList = JSON.parse(localStorage.getItem('reminderList')) || [];\n    if (!reminderList || reminderList == \"undefined\") {\n      reminderList = [];\n    }\n    setReminderListData(reminderList);\n  }, []);\n  useEffect(() => {\n    if (!reminderListData) {\n      return;\n    }\n    localStorage.setItem('reminderList', JSON.stringify(reminderListData));\n  }, [reminderListData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      minWidth: 300\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"row\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Reminder List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          background: \"none\",\n          border: \"none\",\n          color: \"white\",\n          fontSize: \"15px\",\n          cursor: \"pointer\"\n        },\n        onClick: () => {\n          setReminderListData([...reminderListData, {\n            title: '',\n            datestamp: ''\n          }]);\n        },\n        children: \"+ New\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), (reminderListData === null || reminderListData === void 0 ? void 0 : reminderListData.length) > 0 && reminderListData.map((reminder, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reminder-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            alignItems: \"row\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"text-input\",\n            value: reminder.title,\n            onKeyDown: e => {\n              if (e.key === 'Enter') {\n                let reminderList = [...reminderListData];\n                reminderList[index].title = e.target.value;\n                reminderList[index].datestamp = new Date();\n                setReminderListData([...reminderList, {\n                  title: '',\n                  datestamp: ''\n                }]);\n              }\n            },\n            onChange: e => {\n              let reminderList = [...reminderListData];\n              reminderList[index].title = e.target.value;\n              reminderList[index].datestamp = new Date();\n              setReminderListData(reminderList);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              background: \"none\",\n              border: \"none\",\n              color: \"white\",\n              fontSize: \"15px\",\n              cursor: \"pointer\"\n            },\n            onClick: () => {\n              let reminderList = [...reminderListData];\n              reminderList.splice(index, 1);\n              setReminderListData(reminderList);\n            },\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(ReminderListWidget, \"DZCRv9EdyK2GFmPFp3TeOc3Ag9Y=\");\n_c = ReminderListWidget;\nvar _c;\n$RefreshReg$(_c, \"ReminderListWidget\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","ReminderListWidget","_s","reminderListData","setReminderListData","reminderList","JSON","parse","localStorage","getItem","setItem","stringify","style","minWidth","children","display","justifyContent","alignItems","fileName","_jsxFileName","lineNumber","columnNumber","background","border","color","fontSize","cursor","onClick","title","datestamp","length","map","reminder","index","className","value","onKeyDown","e","key","target","Date","onChange","splice","_c","$RefreshReg$"],"sources":["C:/planner-app/src/widgets/ReminderListWidget.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\n \r\nexport default function ReminderListWidget() {\r\n  const [reminderListData, setReminderListData] = useState()\r\n \r\n  useEffect(() => {\r\n    let reminderList = JSON.parse(localStorage.getItem('reminderList')) || []\r\n    if (!reminderList || reminderList == \"undefined\") {\r\n      reminderList = []\r\n    }\r\n    setReminderListData(reminderList)\r\n  }, [])\r\n \r\n  useEffect(() => {\r\n    if (!reminderListData) {\r\n      return\r\n    }\r\n    localStorage.setItem('reminderList', JSON.stringify(reminderListData))\r\n  }, [reminderListData])\r\n \r\n  return (\r\n    <div style={{ minWidth: 300 }}>\r\n      <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"row\" }}>\r\n        <p>Reminder List</p>\r\n        <button\r\n          style={{\r\n            background: \"none\",\r\n            border: \"none\",\r\n            color: \"white\",\r\n            fontSize: \"15px\",\r\n            cursor: \"pointer\",\r\n          }}\r\n          onClick={() => {\r\n            setReminderListData([...reminderListData, {\r\n              title: '',\r\n              datestamp: '',\r\n            }])\r\n          }}\r\n        >+ New</button>\r\n      </div>\r\n      {reminderListData?.length > 0 && reminderListData.map((reminder, index) => {\r\n        return (\r\n          <div className='reminder-container' key={index}>\r\n            <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"row\" }}>\r\n              <input className='text-input' value={reminder.title}\r\n                onKeyDown={(e) => {\r\n                  if (e.key === 'Enter') {\r\n                    let reminderList = [...reminderListData]\r\n                    reminderList[index].title = e.target.value\r\n                    reminderList[index].datestamp = new Date()\r\n                    setReminderListData([...reminderList, {\r\n                      title: '',\r\n                      datestamp: '',\r\n                    }])\r\n                  }\r\n                }}\r\n                onChange={(e) => {\r\n                  let reminderList = [...reminderListData]\r\n                  reminderList[index].title = e.target.value\r\n                  reminderList[index].datestamp = new Date()\r\n                  setReminderListData(reminderList)\r\n                }} />\r\n              <button\r\n                style={{\r\n                  background: \"none\",\r\n                  border: \"none\",\r\n                  color: \"white\",\r\n                  fontSize: \"15px\",\r\n                  cursor: \"pointer\",\r\n                }}\r\n                onClick={() => {\r\n                  let reminderList = [...reminderListData]\r\n                  reminderList.splice(index, 1)\r\n                  setReminderListData(reminderList)\r\n                }}\r\n              >X</button>\r\n            </div>\r\n          </div>\r\n        )\r\n      })}\r\n    </div>\r\n  )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}