[{"C:\\photo-gallery-app\\src\\index.js":"1","C:\\photo-gallery-app\\src\\App.js":"2","C:\\photo-gallery-app\\src\\reportWebVitals.js":"3","C:\\photo-gallery-app\\src\\content\\data.js":"4","C:\\photo-gallery-app\\src\\components\\Header.js":"5","C:\\photo-gallery-app\\src\\modal\\Modal.js":"6"},{"size":535,"mtime":1686757725303,"results":"7","hashOfConfig":"8"},{"size":2102,"mtime":1687113162585,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1686757726262,"results":"10","hashOfConfig":"8"},{"size":1463,"mtime":1687112156031,"results":"11","hashOfConfig":"8"},{"size":831,"mtime":1687112419934,"results":"12","hashOfConfig":"8"},{"size":4389,"mtime":1687112700367,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1p4ys8",{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},"C:\\photo-gallery-app\\src\\index.js",[],[],"C:\\photo-gallery-app\\src\\App.js",["34"],[],"import { useState } from 'react';\nimport { data } from './content/data';\nimport Modal from './modal/Modal';\nimport Header from './components/Header';\n\nfunction App() {\n  const [showModal, setShowModal] = useState(false);\n  const [selectedContent, setSelectedContent] = useState(null);\n\n  return (\n    <>\n      {showModal&&<Modal setShowModal={setShowModal} setSelectedContent={setSelectedContent} content={selectedContent} data={data}/>}\n      <div style={styles.main}>\n        <Header title=\"Photo Gallery\" subtitle=\"A simple photo gallery app built by mwihoti\" />\n        <div style={styles.container}>\n          {data.map((image_data, index) => {\n            return (\n              <div style={styles.imageContainer}\n                onClick={() => {\n                  setShowModal(true);\n                  setSelectedContent(image_data);\n                }}\n              >\n                <img style={styles.image} src={image_data.url} />\n                <div style={styles.imageDescription}>\n                  <p style={styles.imageDescriptionText}>{image_data.name}</p>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </>\n  );\n}\nconst styles = {\n  main: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '100%',\n    height: '100%',\n    backgroundColor: '#f0f0f0',\n    flexDirection: \"column\"\n  },\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    gap: 10,\n    maxWidth: \"60vw\"\n  },\n  imageContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    alignContent: 'center',\n    cursor: 'pointer',\n  },\n  image: {\n    width: '300px',\n    height: '300px',\n    objectFit: 'cover',\n  },\n  imageDescription: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    alignContent: 'center',\n    width: '100%',\n    height: '50px',\n    backgroundColor: '#000000',\n    opacity: '0.5',\n  },\n  imageDescriptionText: {\n    color: '#ffffff',\n    fontSize: '16px',\n    fontWeight: 'bold',\n  },\n}\n\nexport default App","C:\\photo-gallery-app\\src\\reportWebVitals.js",[],[],"C:\\photo-gallery-app\\src\\content\\data.js",[],[],"C:\\photo-gallery-app\\src\\components\\Header.js",[],[],"C:\\photo-gallery-app\\src\\modal\\Modal.js",["35","36"],[],"const Modal = ({ data, content, setSelectedContent, setShowModal }) => {\r\n    const { name, url, description, date, type } = content;\r\n    return (\r\n      <div style={styles.modal}>\r\n        <div style={styles.modalContent}>\r\n          <div style={styles.modalHeader}>\r\n            <h1 style={styles.modalTitle}>{name}</h1>\r\n            <button style={styles.modalCloseButton} onClick={() => setShowModal(false)}>close</button>\r\n          </div>\r\n          <div style={styles.splitContainer}>\r\n            <div style={styles.modalImageContainer}>\r\n              <img style={styles.modalImage} src={url} />\r\n              <p style={styles.modalDescriptionText}>{description}</p>\r\n            </div>\r\n            <div style={styles.modalDescription}>\r\n              <div style={styles.modalRowData}>\r\n                <p style={styles.modalDescriptionText}>Date</p>\r\n                <p style={styles.modalDescriptionText}>{date}</p>\r\n              </div>\r\n              <div style={styles.modalRowData}>\r\n                <p style={styles.modalDescriptionText}>Type</p>\r\n                <p style={styles.modalDescriptionText}>{type}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div style={styles.modalImagePicker}>\r\n            {data.map((image_data, index) => {\r\n              return (\r\n                <div style={styles.imageContainer}\r\n                  onClick={() => {\r\n                    setSelectedContent(image_data);\r\n                  }}\r\n                >\r\n                  <img style={styles.image} src={image_data.url} />\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  const styles = {\r\n    modal: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        width: '100%',\r\n        height: '100%',\r\n        backgroundColor: 'rgba(0,0,0,0.5)',\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        zIndex: 1\r\n    },\r\n    modalContent: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        alignContent: 'center',\r\n        width: '50%',\r\n        backgroundColor: '#ffffff',\r\n        borderRadius: '10px',\r\n        padding: '20px'\r\n    },\r\n    splitContainer: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        alignItems: \"flex-start\",\r\n        gap: \"10px\",\r\n    },\r\n    modalHeader: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        alignContent: 'center',\r\n        width: '100%',\r\n        marginBottom: '20px'\r\n    },\r\n    modalTitle: {\r\n        fontSize: '2rem',\r\n        fontWeight: 'bold',\r\n        color: '#000000',\r\n        textShadow: '2px 2px 2px #ffffff',\r\n        textAlign: 'left'\r\n    },\r\n    modalCloseButton: {\r\n        fontSize: '1.5rem',\r\n        fontWeight: 'bold',\r\n        color: '#000000',\r\n        textShadow: '2px 2px 2px #ffffff',\r\n        textAlign: 'left',\r\n        cursor: 'pointer',\r\n        border: 'none',\r\n        backgroundColor: 'transparent'\r\n    },\r\n    modalImageContainer: {\r\n        width: '100%',\r\n        height: '50%',\r\n        marginBottom: '20px'\r\n    },\r\n    modalImage: {\r\n        width: '100%',\r\n        height: '100%',\r\n        objectFit: 'contain',\r\n    },\r\n    modalDescription: {\r\n        display: 'flex',\r\n        flexDirection: \"column\",\r\n        width: '100%',\r\n    },\r\n    modalRowData: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"space-between\",\r\n        flexDirection: \"row\",\r\n        width: \"100%\"\r\n    },\r\n    modalDescriptionText: {\r\n        fontSize: '1rem',\r\n        fontWeight: 'bold',\r\n        color: 'gray',\r\n        fontStyle: \"italic\",\r\n        textShadow: '2px 2px 2px #ffffff',\r\n        textAlign: 'left'\r\n    },\r\n    modalImagePicker: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        maxWidth: \"100%\",\r\n        overflowX: \"scroll\",\r\n        gap: \"10px\",\r\n    },\r\n    image: {\r\n        width: '200px',\r\n        height: '200px',\r\n        objectFit: 'cover',\r\n    },\r\n    imageContainer: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        alignContent: 'center',\r\n        cursor: 'pointer',\r\n    },\r\n\r\n}\r\n\r\nexport default Modal;",{"ruleId":"37","severity":1,"message":"38","line":24,"column":17,"nodeType":"39","endLine":24,"endColumn":66},{"ruleId":"37","severity":1,"message":"38","line":12,"column":15,"nodeType":"39","endLine":12,"endColumn":58},{"ruleId":"37","severity":1,"message":"38","line":34,"column":19,"nodeType":"39","endLine":34,"endColumn":68},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]