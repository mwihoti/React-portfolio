[{"C:\\Users\\Dan\\multimedia-app\\src\\index.js":"1","C:\\Users\\Dan\\multimedia-app\\src\\reportWebVitals.js":"2","C:\\Users\\Dan\\multimedia-app\\src\\App.js":"3","C:\\Users\\Dan\\multimedia-app\\src\\data.js":"4","C:\\Users\\Dan\\multimedia-app\\src\\components\\Header.js":"5","C:\\Users\\Dan\\multimedia-app\\src\\components\\AudioPlayer.js":"6","C:\\Users\\Dan\\multimedia-app\\src\\components\\ImageViewer.js":"7","C:\\Users\\Dan\\multimedia-app\\src\\components\\VideoPlayer.js":"8","C:\\Users\\Dan\\multimedia-app\\src\\components\\DocumentViewer.js":"9"},{"size":535,"mtime":1687458719638,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1687458720747,"results":"12","hashOfConfig":"11"},{"size":7567,"mtime":1687462971695,"results":"13","hashOfConfig":"11"},{"size":859,"mtime":1687463407674,"results":"14","hashOfConfig":"11"},{"size":506,"mtime":1687459633116,"results":"15","hashOfConfig":"11"},{"size":236,"mtime":1687461949683,"results":"16","hashOfConfig":"11"},{"size":146,"mtime":1687462120656,"results":"17","hashOfConfig":"11"},{"size":215,"mtime":1687461875043,"results":"18","hashOfConfig":"11"},{"size":199,"mtime":1687462049628,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"d1wpob",{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Dan\\multimedia-app\\src\\index.js",[],[],"C:\\Users\\Dan\\multimedia-app\\src\\reportWebVitals.js",[],[],"C:\\Users\\Dan\\multimedia-app\\src\\App.js",["49","50"],[],"import React, { useState, useEffect } from 'react';\nimport { data } from './data';\nimport { Header } from \"./components/Header\";\nimport { AudioPlayer } from './components/AudioPlayer';\nimport { DocumentViewer } from './components/DocumentViewer';\nimport { VideoPlayer } from './components/VideoPlayer';\nimport { ImageViewer } from './components/ImageViewer';\nimport { Pie, Bar } from 'react-chartjs-2';\nimport {\n Chart as ChartJS,\n CategoryScale,\n LinearScale,\n BarElement,\n Title,\n ArcElement,\n Tooltip,\n Legend\n} from 'chart.js';\nChartJS.register(\n CategoryScale,\n LinearScale,\n BarElement,\n Title,\n Tooltip,\n Legend,\n ArcElement\n);\n\nexport default function App() {\n const [myFiles, setMyFiles] = useState([])\n const [selectedFile, setSelectedFile] = useState(null)\n const [filePath, setFilePath] = useState(\"/file-server/\")\n const [showChartModal, setShowChartModal] = useState(false)\n \n useEffect(() => {\n  setMyFiles(data)\n }, [])\n var barChartOptions = {\n  responsive: true,\n  plugins: {\n   legend: {\n    position: 'top',\n   },\n   title: {\n    display: true,\n    text: 'Files Breakdown',\n   },\n  },\n };\n return (\n  <>\n  {showChartModal && (\n    <div style={styles.modal}>\n     <div style={styles.modalContent}>\n      <div style={styles.modalHeader}>\n       <p style={{ fontWeight: \"bold\" }}>Files Breakdown</p>\n       <button style={styles.closeButton} onClick={() => setShowChartModal(false)}>close</button>\n      </div>\n      <div style={styles.modalBody}>\n       <Pie\n        data={{\n         labels: ['Video', 'Audio', 'Document', 'Image'],\n         datasets: [\n          {\n           label: 'Files Breakdown',\n           data: [myFiles.filter(file => file.type === 'video').length, myFiles.filter(file => file.type === 'audio').length, myFiles.filter(file => file.type === 'document').length, myFiles.filter(file => file.type === 'image').length],\n           backgroundColor: [\n            'rgba(255, 99, 132, 0.2)',\n            'rgba(54, 162, 235, 0.2)',\n            'rgba(255, 206, 86, 0.2)',\n            'rgba(75, 192, 192, 0.2)',\n           ],\n           borderColor: [\n            'rgba(255, 99, 132, 1)',\n            'rgba(54, 162, 235, 1)',\n            'rgba(255, 206, 86, 1)',\n            'rgba(75, 192, 192, 1)',\n           ],\n           borderWidth: 1,\n          },\n         ],\n        }}\n       />\n       <Bar\n        data={{\n         labels: ['Video', 'Audio', 'Document', 'Image'],\n         datasets: [\n          {\n           label: 'Files Breakdown',\n           data: [myFiles.filter(file => file.type === 'video').length, myFiles.filter(file => file.type === 'audio').length, myFiles.filter(file => file.type === 'document').length, myFiles.filter(file => file.type === 'image').length],\n           backgroundColor: [\n            'rgba(255, 99, 132, 0.2)',\n            'rgba(54, 162, 235, 0.2)',\n            'rgba(255, 206, 86, 0.2)',\n            'rgba(75, 192, 192, 0.2)',\n           ],\n           borderColor: [\n            'rgba(255, 99, 132, 1)',\n            'rgba(54, 162, 235, 1)',\n            'rgba(255, 206, 86, 1)',\n            'rgba(75, 192, 192, 1)',\n           ],\n           borderWidth: 1,\n          },\n         ],\n        }}\n        options={barChartOptions}\n       />\n      </div>\n     </div>\n    </div>\n   )}\n   <div className=\"App\">\n    <Header />\n    <div style={styles.container}>\n     <div style={{ padding: 10, paddingBottom: 0, }}>\n      <p style={{ fontWeight: \"bold\" }}>My Files</p>\n      <p>{selectedFile ? selectedFile.path : filePath}</p>\n     </div>\n     <div style={styles.controlTools}>\n            <button style={styles.controlButton}\n              onClick={() => {\n                if (selectedFile) {\n                  const newFiles = myFiles.map(file => {\n                    if (file.id === selectedFile.id) {\n                      return {\n                        ...file,\n                        name: prompt(\"Enter new name\")\n                      }\n                    }\n                    return file\n                  })\n                  setMyFiles(newFiles)\n                  setSelectedFile(null)\n                }\n              }}\n            >Rename</button>\n            <button style={styles.controlButton}\n              onClick={() => {\n                setShowChartModal(true)\n              }}\n            >Files Breakdown</button>\n            <button style={styles.controlButton}\n              onClick={() => {\n                if (selectedFile){\n                  window.open(selectedFile.path, \"_blank\")\n                }\n              }}\n            >Download</button>\n          </div>\n     <div style={styles.fileContainer}>\n      <div style={{ width: \"100%\", padding: 10 }}>\n       {myFiles.map((file) => {\n \n        if (file.path.slice(0, filePath.length) === filePath) {\n         return (\n          <div style={styles.file} className=\"files\" key={file.id} onClick={() => {\n           if (selectedFile && selectedFile.id === file.id) {\n            setSelectedFile(null)\n            return\n           }\n           setSelectedFile(file)\n          }}>\n           <p>{file.name}</p>\n          </div>\n         )\n        }\n       })}\n      </div>\n      {selectedFile && (\n       <div style={styles.fileViewer}>\n        {selectedFile.type === 'video' && (\n         <VideoPlayer path={selectedFile.path} />\n        )}\n        {selectedFile.type === 'audio' && (\n         <AudioPlayer path={selectedFile.path} />\n        )}\n        {selectedFile.type === 'document' && (\n         <DocumentViewer path={selectedFile.path} />\n        )}\n        {selectedFile.type === 'image' && (\n         <ImageViewer path={selectedFile.path} />\n        )}\n        <p style={{ fontWeight: \"bold\", marginTop: 10 }}>{selectedFile.name}</p>\n        <p>path: <span style={{ fontStyle: \"italic\" }}>{selectedFile.path}</span></p>\n        <p>file type: <span style={{fontStyle: \"italic\"}}>{selectedFile.type}</span></p>\n       </div>\n \n      )}\n     </div>\n    </div>\n   </div>\n  </>\n );\n}\n \nconst styles = {\n container: {\n  backgroundColor: '#fff',\n  color: '#000',\n },\n fileContainer: {\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'flex-start',\n  flexDirection: 'row',\n \n },\n file: {\n  backgroundColor: '#eee',\n  padding: '10px',\n  marginBottom: '10px',\n  cursor: 'pointer',\n  width: '100%',\n },\n fileViewer: {\n  padding: '10px',\n  margin: '10px',\n  width: '30vw',\n  height: '100vh',\n  cursor: 'pointer',\n  borderLeft: '1px solid #000'\n },\n controlTools: {\n  display: 'flex',\n  gap: '10px',\n  alignItems: 'center',\n  flexDirection: 'row',\n  padding: '10px',\n },\n controlButton: {\n  padding: '10px',\n  border: 'none',\n  cursor: 'pointer',\n  fontWeight: 'bold',\n },\n\n\nmodal: {\n  position: 'fixed',\n  top: 0,\n  left: 0,\n  width: '100vw',\n  height: '100vh',\n  backgroundColor: 'rgba(0, 0, 0, 0.5)',\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n},\nmodalContent: {\n  backgroundColor: '#fff',\n  padding: '20px',\n  height: '50vh',\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  flexDirection: 'column',\n},\nmodalClose: {\n  position: 'absolute',\n  top: 0,\n  right: 0,\n  padding: '10px',\n  cursor: 'pointer',\n},\nmodalBody:{\n  width: '100%',\n  height: '90%',\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  flexDirection: 'row',\n  padding: '10px',\n},\nmodalHeader: {\n  width: '100%',\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  flexDirection: 'row',\n},\ncloseButton: {\n  padding: '10px',\n  border: 'none',\n  cursor: 'pointer',\n  fontWeight: 'bold',\n  backgroundColor: '#eee',\n}\n};",[],"C:\\Users\\Dan\\multimedia-app\\src\\data.js",[],[],"C:\\Users\\Dan\\multimedia-app\\src\\components\\Header.js",[],[],"C:\\Users\\Dan\\multimedia-app\\src\\components\\AudioPlayer.js",[],[],"C:\\Users\\Dan\\multimedia-app\\src\\components\\ImageViewer.js",["51"],[],"C:\\Users\\Dan\\multimedia-app\\src\\components\\VideoPlayer.js",[],[],"C:\\Users\\Dan\\multimedia-app\\src\\components\\DocumentViewer.js",["52"],[],{"ruleId":"53","severity":1,"message":"54","line":32,"column":19,"nodeType":"55","messageId":"56","endLine":32,"endColumn":30},{"ruleId":"57","severity":1,"message":"58","line":153,"column":28,"nodeType":"59","messageId":"60","endLine":153,"endColumn":30},{"ruleId":"61","severity":1,"message":"62","line":4,"column":9,"nodeType":"63","endLine":4,"endColumn":27},{"ruleId":"64","severity":1,"message":"65","line":4,"column":9,"nodeType":"63","endLine":4,"endColumn":68},"no-unused-vars","'setFilePath' is assigned a value but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property."]